<?php

require('/usr/local/inthinc/php/FPDF/fpdf.php');
require_once '/usr/local/inthinc/php/swiftMailer/swift_required.php';

$sDate = date("Y-m-d",strtotime("-1 week +1 day"));
$eDate = date("Y-m-d",strtotime("-1 day"));

//database connection
$mysql_login = explode("|", file_get_contents("/etc/inthinc/salesreports.conf",true));
$db_server = $mysql_login[0].":".$mysql_login[1] ;
$db_username = $mysql_login[3];
$db_password = trim($mysql_login[4]);
$db_database = $mysql_login[2];

$cnx = mysql_connect($db_server, $db_username, $db_password, $db_database);
mysql_select_db($db_database);

function getPath(){
        $path="/usr/local/inthinc/bin/Shell/";
$path="";
        return $path;
      }

function email($file, $group_name, $email){
        $file = str_replace(" ", "_", $file);

        $emailTo = explode(',', $email);
        #$emailCc = array('dmarcus@inthinc.com');

        $group_name = str_replace("_", " ", $group_name);

        $transport = Swift_SmtpTransport::newInstance('mail2.tiwii.com', 25);
        $mailer = Swift_Mailer::newInstance($transport);
        $email = Swift_Message::newInstance()
        ->setSubject("inthinc DataServices Shell Weekly Driver Events -".$group_name." -".date("Y-m-d") ."")
        ->setFrom("dataservices@inthinc.com")
        ->setTo($emailTo)
        ->setCc($emailCc)
        ->setBody("See attached weekly report.")
        ->attach(Swift_Attachment::fromPath($file));
        $result = $mailer->send($email);
}

function getPDF($sDate, $eDate, $group_ID, $group_name, $cnx, $email) {

$path = getPath();
$file = $path.$eDate."_Shell_Weekly_Events_Report_".$group_name.".pdf";

$sql = "select dr.name as 'Driver'
, round(((sum(ifNull(agg.odometer6, 0))/100) * 1.60934), 2) as 'Kilometers'
, sum(ifNull(agg.seatbeltEvents, 0)) as 'Seatbelt'
, sum(ifNull(agg.aggressiveAccelEvents, 0)) as 'Acceleration'
, sum(ifNull(agg.idleLoEvents + agg.idleHiEvents, 0)) as 'Over Idle'
, sum(ifNull(rev.rpmEvents,0)) as 'Over Rev'
, sum(ifNull(agg.aggressiveBrakeEvents, 0)) as 'Hard Brake'
, sum(ifNull(agg.aggressiveBumpEvents, 0)) as 'Hard Bump'
, sum(ifNull(agg.aggressiveLeftEvents + agg.aggressiveRightEvents, 0)) as 'Hard Turn'
, sum(ifNull(agg.speedEvents1, 0)) + sum(ifNull(agg.speedEvents2, 0)) + sum(ifNull(agg.speedEvents3, 0)) + sum(ifNull(agg.speedEvents4, 0)) + sum(ifNull(agg.speedEvents5, 0)) as 'Speeding'
        from driver dr
        left join agg on dr.driver_id = agg.driver_id
                and agg.aggDate >= '".$sDate."'
                and agg.aggDate < '".$eDate."' + interval 1 day
        left join (
                        select dr.driver_id
                        , n.vehicle_id
                        , date_format(convert_TZ(n.time, 'GMT', dr.tzName), '%Y-%m-%d') aggDate
                        , count(*) rpmEvents
                                from driver dr
                                join note n on n.driver_id = dr.driver_id
                                        where dr.account_id = 52 and dr.group_id = 8649146
                                        and n.type in (4, 14, 49, 58, 93, 191, 192)
                                        and n.time >= current_date - interval 7 day
                                        and n.time < current_date
                                group by 1, 2, 3
                        ) rev on dr.driver_id =rev.driver_id and agg.aggDate = rev.aggDate

                where dr.account_id = 52
                and dr.group_id = '".$group_ID."'
                and dr.status_id not in (3, 4)
                        group by dr.name
                        order by Kilometers DESC;
";
}

class PDF extends FPDF{
  
var $ProcessingTable=false;
var $aCols=array();
var $TableX;
var $HeaderColor;
var $RowColors;
var $ColorIndex;

public $name;
public $startDate;
public $endDate;

public function setName($name){
        $this->name = $name;
}

public function setStart($startDate){
        $this->startDate = $startDate;
}

public function setEnd($endDate){
        $this->endDate = $endDate;
}

function Header(){
        $groupName = $this->name;
        $groupName = str_replace("_", " ", $groupName);

        $sDate = $this->startDate;
        $eDate = $this->endDate;

        //Title
        $this->Image('https://my.inthinc.com/tiwipro/css/images/inthinc-nav-logo.png',20,15,30);
        $this->SetFont('Arial','',18);
        $this->Cell(0,6,'Shell Weekly Driver Events',0,1,'C');
        $this->Ln(1);
        $this->SetFont('Arial','',14);
        $this->Cell(0,6,$sDate." through ".$eDate,0,1,'C');
        $this->Ln(1);
        $this->SetFont('Arial','I',14);
        $this->Cell(0,6,$groupName,0,1,'C');
        $this->Ln(10);
        //Ensure table header is output
        parent::Header();

        if($this->ProcessingTable)
                $this->TableHeader();
}

function Footer(){
        // Position at 1.5 cm from bottom
        $this->SetY(-15);
        $this->SetFont('Arial','I',12);
        $this->Cell(0,10,'Please follow up with team members regarding possible exceptions',0,0,'C');
        $this->SetY(-10);
        $this->SetFont('Arial','I',10);
        $this->Cell(0,10,'Page '.$this->PageNo(),0,0,'C');
        //Ensure table footer is output
        parent::Footer();
}
function TableHeader(){
        $this->SetFont('Arial','B',12);
        $this->SetX($this->TableX);
        $fill=!empty($this->HeaderColor);
        if($fill)
                $this->SetFillColor($this->HeaderColor[0],$this->HeaderColor[1],$this->HeaderColor[2]);
        foreach($this->aCols as $col)
                $this->Cell($col['w'],6,$col['c'],1,0,'C',$fill);
        $this->Ln();
}

function Row($data){
        $this->SetX($this->TableX);
        $ci=$this->ColorIndex;
        $fill=!empty($this->RowColors[$ci]);
        if($fill)
        $this->SetFillColor($this->RowColors[$ci][0],$this->RowColors[$ci][1],$this->RowColors[$ci][2]);
        foreach($this->aCols as $col)
        $this->Cell($col['w'],5,$data[$col['f']],1,0,$col['a'],$fill);
        $this->Ln();
        $this->ColorIndex=1-$ci;
}

function CalcWidths($width,$align){
//Compute the widths of the columns
$TableWidth=0;
foreach($this->aCols as $i=>$col){
        $w=$col['w'];
        if($w==-1)
        $w=$width/count($this->aCols);
        elseif(substr($w,-1)=='%')
        $w=$w/100*$width;

        if ($i==0)
                $w = 60;
        if ($i==1)
                $w = 26;
        if ($i==2)
                $w = 20;
        if ($i==3)
                $w = 26;
        if ($i==4)
                $w = 20;
        if ($i==5)
                $w = 23;
        if ($i==6)
                $w = 24;
        if ($i==7)
               $w = 23;
        if ($i==8)
               $w = 22;
        if ($i==9)
               $w = 20;

        $this->aCols[$i]['w']=$w;
        $TableWidth+=$w;
}

//Compute the abscissa of the table
        if($align=='C')
        $this->TableX=max(($this->w-$TableWidth)/2,0);
        elseif($align=='R')
        $this->TableX=max($this->w-$this->rMargin-$TableWidth,0);
        else
        $this->TableX=$this->lMargin;
}

function AddCol($field=-1,$width=-1,$caption='',$align='L'){
        //Add a column to the table
        if($field==-1)
                $field=count($this->aCols);
        $this->aCols[]=array('f'=>$field,'c'=>$caption,'w'=>$width,'a'=>$align);
}
function Table($query,$prop=array()){
        //Issue query
        $res=mysql_query($query) or die('Error: '.mysql_error()."<BR>Query: $query");
        //Add all columns if none was specified
        if(count($this->aCols)==0){
                $nb=mysql_num_fields($res);
                for($i=0;$i<$nb;$i++)
                $this->AddCol();
        }

        //Retrieve column names when not specified
        foreach($this->aCols as $i=>$col){
                if($col['c']==''){
                        if(is_string($col['f']))
                                $this->aCols[$i]['c']=ucfirst($col['f']);
                        else
                                $this->aCols[$i]['c']=ucfirst(mysql_field_name($res,$col['f']));
                }
        }

        //Handle properties
        if(!isset($prop['width']))
                $prop['width']=0;
        if($prop['width']==0)
                $prop['width']=$this->w-$this->lMargin-$this->rMargin;
        if(!isset($prop['align']))
                $prop['align']='C';
        if(!isset($prop['padding']))
                $prop['padding']=$this->cMargin;

        $cMargin=$this->cMargin;
        $this->cMargin=$prop['padding'];

        if(!isset($prop['HeaderColor']))
                $prop['HeaderColor']=array(200, 200, 200);
        $this->HeaderColor=$prop['HeaderColor'];
        if(!isset($prop['color1']))
                $prop['color1']=array();
        if(!isset($prop['color2']))
                $prop['color2']=array();
        $this->RowColors=array($prop['color1'],$prop['color2']);

        //Compute column widths
        $this->CalcWidths($prop['width'],$prop['align']);

        //Print header
        $this->TableHeader();

        //Print rows
        $this->SetFont('Arial','',11);
        $this->ColorIndex=0;
        $this->ProcessingTable=true;
        while($row=mysql_fetch_array($res))
        $this->Row($row);
        $this->ProcessingTable=false;
        $this->cMargin=$cMargin;
        $this->aCols=array();
        }
}

//call functions


?>
